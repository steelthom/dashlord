name: DashLord scans

on:
  workflow_dispatch:
    inputs:
      url:
        description: "Single url to scan or scan all urls"
        required: false
        default: ""
      tool:
        description: "Single tool to run or use all tools"
        type: choice
        default: all
        options:
          - all
          - "404"
          - betagouv
          - betagouv-budget
          - betagouv-stats
          - declaration-a11y
          - declaration-rgpd
          - dsfr
          - ecoindex
          - httpobs
          - lighthouse
          - nmapvuln
          - testssl
          - tracking
          - wappalyzer
  schedule:
    - cron: "0 2 * * *" # see https://crontab.guru

# allow only one concurrent scan action
concurrency:
  cancel-in-progress: true
  group: scans

jobs:
  init:
    runs-on: ubuntu-latest
    name: Prepare
    outputs:
      sites: ${{ steps.init.outputs.sites }}
    steps:
      - uses: actions/checkout@v4
        with:
          sparse-checkout: urls.txt

      - name: Write urls.txt for single site
        if: inputs.url != ''
        run: |
          HOSTNAME=$(echo "${{ inputs.url }}" | sed -e 's/[^/]*\/\/\([^@]*@\)\?\([^:/]*\).*/\2/')
          URL=https://${HOSTNAME}
          echo $URL > /tmp/urls.txt

      - name: Use urls.txt for all sites
        if: inputs.url == ''
        run: |
          cp urls.txt /tmp/urls.txt

      - name: Init from text
        uses: Quentium-Forks/dashlord-actions/init-from-txt@main
        id: init
        with:
          count: 250
          txtPath: /tmp/urls.txt
  scans:
    runs-on: ubuntu-latest
    name: Scan
    needs: init
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        sites: ${{ fromJson(needs.init.outputs.sites) }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          sparse-checkout: urls.txt

      - run: |
          mkdir scans

      - name: Mozilla HTTP Observatory
        if: ${{ inputs.tool == 'httpobs' || inputs.tool == 'all' || github.event_name != 'workflow_dispatch' }}
        continue-on-error: true
        timeout-minutes: 10
        id: http
        uses: Quentium-Forks/dashlord-actions/httpobs@main
        with:
          url: ${{ matrix.sites.url }}
          output: scans/http.json

      - name: Mozilla HTTP Observatory retry
        if: steps.http.outcome=='failure'
        continue-on-error: true
        timeout-minutes: 10
        uses: Quentium-Forks/dashlord-actions/httpobs@main
        with:
          url: ${{ matrix.sites.url }}
          output: scans/http.json

      - name: Cancel next steps if HTTP Observatory failed
        run: |
          if grep -q "The site seems to be down." scans/http.json; then
            echo "HTTP Observatory failed, cancelling next steps"
            exit 1
          fi

      - name: dsfr
        if: ${{ inputs.tool == 'dsfr' || inputs.tool == 'all' || github.event_name != 'workflow_dispatch' }}
        continue-on-error: true
        timeout-minutes: 10
        uses: Quentium-Forks/dashlord-actions/dsfr@main
        with:
          url: ${{ matrix.sites.url }}
          output: scans/dsfr.json

      - name: Déclaration a11y
        if: ${{ inputs.tool == 'declaration-a11y' || inputs.tool == 'all' || github.event_name != 'workflow_dispatch' }}
        continue-on-error: true
        timeout-minutes: 10
        uses: Quentium-Forks/dashlord-actions/declaration-a11y@main
        with:
          url: ${{ matrix.sites.url }}
          output: scans/declaration-a11y.json

      - name: Déclaration RGPD
        if: ${{ inputs.tool == 'declaration-rgpd' || inputs.tool == 'all' || github.event_name != 'workflow_dispatch' }}
        continue-on-error: true
        timeout-minutes: 10
        uses: Quentium-Forks/dashlord-actions/declaration-rgpd@main
        with:
          url: ${{ matrix.sites.url }}
          output: scans/declaration-rgpd.json

      - name: EcoIndex
        if: ${{ inputs.tool == 'ecoindex' || inputs.tool == 'all' || github.event_name != 'workflow_dispatch' }}
        continue-on-error: true
        timeout-minutes: 10
        uses: Quentium-Forks/dashlord-actions/ecoindex@main
        with:
          url: ${{ matrix.sites.url }}
          output: scans/ecoindex.json

      - name: Detect 404
        if: ${{ inputs.tool == '404' || inputs.tool == 'all' || github.event_name != 'workflow_dispatch' }}
        continue-on-error: true
        timeout-minutes: 10
        uses: Quentium-Forks/dashlord-actions/404@main
        with:
          url: ${{ matrix.sites.url }}
          output: scans/404.json

      - name: Tracking
        if: ${{ inputs.tool == 'tracking' || inputs.tool == 'all' || github.event_name != 'workflow_dispatch' }}
        continue-on-error: true
        timeout-minutes: 10
        uses: Quentium-Forks/dashlord-actions/tracking@main
        with:
          url: ${{ matrix.sites.url }}
          output: scans/tracking.json

      - name: Wappalyzer scan
        if: ${{ inputs.tool == 'wappalyzer' || inputs.tool == 'all' || github.event_name != 'workflow_dispatch' }}
        continue-on-error: true
        timeout-minutes: 10
        uses: SocialGouv/wappalyzer-action@master
        with:
          url: ${{ matrix.sites.url }}
          output: scans/wappalyzer.json

      # testssl.sh & nmap action needs an hostname to save its output
      - name: Extract hostname
        id: hostname
        run: |
          HOSTNAME=$(echo ${{ matrix.sites.url }} | sed -e 's/[^/]*\/\/\([^@]*@\)\?\([^:/]*\).*/\2/')
          echo "value=$HOSTNAME" >> $GITHUB_OUTPUT

      - name: testssl.sh scan
        if: ${{ inputs.tool == 'testssl' || inputs.tool == 'all' || github.event_name != 'workflow_dispatch' }}
        continue-on-error: true
        timeout-minutes: 10
        uses: mbogh/test-ssl-action@main
        with:
          host: ${{ steps.hostname.outputs.value }}
          output: scans
          grade: F

      - name: Nmap vulnerabilities scan
        if: ${{ inputs.tool == 'nmapvuln' || inputs.tool == 'all' || github.event_name != 'workflow_dispatch' }}
        continue-on-error: true
        timeout-minutes: 10
        uses: MTES-MCT/nmap-action@main
        with:
          host: ${{ steps.hostname.outputs.value }}
          outputDir: scans
          outputFile: nmapvuln.json
          withVulnerabilities: true
          raw: false

      # - name: Betagouv API scan
      #   if: ${{ inputs.tool == 'betagouv' || inputs.tool == 'all' || github.event_name != 'workflow_dispatch' }}
      #   continue-on-error: true
      #   timeout-minutes: 10
      #   id: betagouv
      #   uses: betagouv/dashlord-startup-action@main
      #   with:
      #     id: ${{ matrix.sites.betaId }}
      #     output: scans/betagouv.json

      # - name: Budget page
      #   if: ${{ inputs.tool == 'betagouv-budget' || inputs.tool == 'all' || github.event_name != 'workflow_dispatch' }}
      #   continue-on-error: true
      #   timeout-minutes: 10
      #   uses: betagouv/check-url-action@main
      #   with:
      #     url: ${{ steps.betagouv.outputs.budget_url }}
      #     output: scans/budget_page.json
      #     exactExpectedRegex: ^budget$

      # - name: Stats page
      #   if: ${{ inputs.tool == 'betagouv-stats' || inputs.tool == 'all' || github.event_name != 'workflow_dispatch' }}
      #   continue-on-error: true
      #   timeout-minutes: 10
      #   uses: betagouv/check-url-action@main
      #   with:
      #     url: ${{ steps.betagouv.outputs.stats_url || format('{0}/stats', matrix.sites.url) }}
      #     output: scans/stats.json
      #     minExpectedRegex: ^stat
      #     exactExpectedRegex: ^stats$

      - name: Lighthouse scan
        if: ${{ inputs.tool == 'lighthouse' || inputs.tool == 'all' || github.event_name != 'workflow_dispatch' }}
        continue-on-error: true
        timeout-minutes: 10
        uses: Quentium-Forks/dashlord-actions/lhci@main
        with:
          url: ${{ matrix.sites.url }}

      - uses: Quentium-Forks/dashlord-actions/save@main
        with:
          url: ${{ matrix.sites.url }}
          # only clean up previous stats when all tools runned
          cleanup: ${{ inputs.tool == 'all' && true || false }}

      - uses: EndBug/add-and-commit@v9
        with:
          add: "--sparse results"
          pull: "--rebase --autostash ..."
          default_author: "github_actions"
          message: "update: ${{ matrix.sites.url }}"
