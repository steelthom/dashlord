name: DashLord scans

on:
  workflow_dispatch:
    inputs:
      tool:
        description: "Single tool to run or use all tools"
        type: choice
        default: all
        options:
          - all
          - codescan
          - dependabot
          - ecoindex
          - lighthouse
          - sonarcloud
          - trivy
          - zap
          - ecoindex
          - dsfr
          - declaration-a11y
          - declaration-rgpd
  push:
    branches:
      - master
      - main
    paths:
      - "dashlord.yaml"
      - "dashlord.yml"
      - "urls.txt"
  schedule:
    - cron: "0 2 * * *" # see https://crontab.guru

# allow only one concurrent scan action
concurrency:
  cancel-in-progress: true
  group: scans

jobs:
  init:
    runs-on: ubuntu-latest
    name: Prepare
    outputs:
      sites: ${{ steps.init.outputs.sites }}
    steps:
      - uses: actions/checkout@v4
      - id: init
        uses: SocialGouv/dashlord-actions/init-from-txt@v1
        with:
          count: 100
  scans:
    runs-on: ubuntu-latest
    name: Scan
    needs: init
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        sites: ${{ fromJson(needs.init.outputs.sites) }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - run: |
          mkdir scans

      - uses: actions/cache@v4
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: dsfr
        continue-on-error: true
        timeout-minutes: 10
        uses: SocialGouv/dashlord-actions/dsfr@v1
        with:
          url: ${{ matrix.sites.url }}
          output: scans/dsfr.json

      - name: Déclaration a11y
        continue-on-error: true
        timeout-minutes: 10
        uses: SocialGouv/dashlord-actions/declaration-a11y@v1
        with:
          url: ${{ matrix.sites.url }}
          output: scans/declaration-a11y.json

      - name: EcoIndex
        continue-on-error: true
        timeout-minutes: 10
        uses: SocialGouv/dashlord-actions/ecoindex@v1
        with:
          url: ${{ matrix.sites.url }}
          output: scans/ecoindex.json

      - name: Déclaration RGPD
        continue-on-error: true
        timeout-minutes: 10
        uses: SocialGouv/dashlord-actions/declaration-rgpd@v1
        with:
          url: ${{ matrix.sites.url }}
          output: scans/declaration-rgpd.json

      - name: Detect 404
        continue-on-error: true
        timeout-minutes: 10
        uses: SocialGouv/detect-404-action@master
        with:
          url: ${{ matrix.sites.url }}
          output: scans/404.json

      - name: Betagouv API scan
        continue-on-error: true
        timeout-minutes: 10
        id: betagouv
        uses: betagouv/dashlord-startup-action@main
        with:
          id: "${{ matrix.sites.betaId }}"
          output: "scans/betagouv.json"

      - name: Wappalyzer scan
        continue-on-error: true
        timeout-minutes: 10
        uses: SocialGouv/wappalyzer-action@master
        with:
          url: "${{ matrix.sites.url }}"
          output: scans/wappalyzer.json

      - name: Mozilla HTTP Observatory
        continue-on-error: true
        timeout-minutes: 10
        id: http
        uses: SocialGouv/httpobs-action@master
        with:
          url: "${{ matrix.sites.url }}"
          output: "scans/http.json"

      - name: Mozilla HTTP Observatory retry
        if: steps.http.outcome=='failure'
        continue-on-error: true
        timeout-minutes: 10
        uses: SocialGouv/httpobs-action@master
        with:
          url: "${{ matrix.sites.url }}"
          output: "scans/http.json"

      # testssl.sh action needs an hostname to save its output so we build it here
      - name: Extract hostname
        id: hostname
        run: |
          HOSTNAME=$(echo "${{ matrix.sites.url }}" | sed -e 's/[^/]*\/\/\([^@]*@\)\?\([^:/]*\).*/\2/')
          echo "::set-output name=value::$HOSTNAME"

      - name: testssl.sh scan
        continue-on-error: true
        timeout-minutes: 10
        uses: mbogh/test-ssl-action@v3
        with:
          host: ${{ steps.hostname.outputs.value }}
          output: scans
          grade: "F"
          options: "--fast"
      
      - name: nmap vulnerabilities scan
        continue-on-error: true
        timeout-minutes: 10
        uses: MTES-MCT/nmap-action@main
        with:
          host: ${{ steps.hostname.outputs.value }}
          outputDir: "scans"
          outputFile: "nmapvuln.json"
          withVulnerabilities: true
          raw: false
      
      - name: Budget page
        continue-on-error: true
        timeout-minutes: 10
        uses: betagouv/check-url-action@main
        with:
          url: ${{ steps.betagouv.outputs.budget_url }}
          output: scans/budget_page.json
          exactExpectedRegex: ^budget$

      - name: Stats page
        continue-on-error: true
        timeout-minutes: 10
        uses: betagouv/check-url-action@main
        with:
          url: ${{ steps.betagouv.outputs.stats_url || format('{0}/stats', matrix.sites.url) }}
          output: scans/stats.json
          minExpectedRegex: ^stat
          exactExpectedRegex: ^stats$
      
      # https://github.com/treosh/lighthouse-ci-action#inputs
      - name: Lighthouse scan
        continue-on-error: true
        timeout-minutes: 10
        uses: SocialGouv/dashlord-actions/lhci@v1
        with:
          url: "${{ join(matrix.sites.subpages, ',') }}"

      - uses: SocialGouv/dashlord-actions/save@v1
        with:
          url: ${{ matrix.sites.url }}
          # only clean up previous stats when all tools runned
          cleanup: ${{ github.event.inputs.tool == 'all' && true || false }}

      - name: "Commit"
        id: commit
        continue-on-error: true
        run: |
          git config --global user.email 41898282+github-actions[bot]@users.noreply.github.com
          git config --global user.name GitHub
          git add "results"
          git commit -m "update: ${{ matrix.sites.url }}"
          git pull --rebase --no-ff origin ${{ github.ref }}
          git push

      - name: "Commit retry 1"
        if: steps.commit.outcome=='failure'
        id: commit-retry
        continue-on-error: true
        run: |
          git config --global user.email 41898282+github-actions[bot]@users.noreply.github.com
          git config --global user.name GitHub
          git add "results"
          git commit -m "update: ${{ matrix.sites.url }}"
          git pull --rebase --no-ff origin ${{ github.ref }}
          git push

      - name: "Commit retry 2"
        if: steps.commit-retry.outcome=='failure'
        run: |
          git config --global user.email 41898282+github-actions[bot]@users.noreply.github.com
          git config --global user.name GitHub
          git add "results"
          git commit -m "update: ${{ matrix.sites.url }}"
          git pull --rebase --no-ff origin ${{ github.ref }}
          git push
